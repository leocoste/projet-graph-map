/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package saegraphmap.window;

import java.awt.*;
import java.awt.event.ItemEvent;
import java.io.File;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

import saegraphmap.linkedlist.TLieu;
import saegraphmap.linkedlist.TListe;
import saegraphmap.linkedlist.TRoute;
import saegraphmap.pathfinding.FloydWarshallMatrix;
import saegraphmap.window.listener.GraphPanelListener;

/**
 * Cette classe permet de faire une fenettre permettant d'exploiter un graph enregistrer au format csv
 * @author Jérémie Vernay Léo Coste
 * @version 69.420
 */
public class Mainscreen extends javax.swing.JFrame {

    /**
     * Créer la fenetre et initialise les composant
     * modifie l'icon du logiciel
     */
    public Mainscreen() {
        initComponents();
        ImageIcon img = new ImageIcon("src/saegraphmap/data/logo.png");
        this.setIconImage(img.getImage());
        this.graphPanel1.addGraphPanelListener(new GraphListener());
        cbDeuxDistance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbunDistanceActionPerformed(evt);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        globalOptionPanel = new javax.swing.JPanel();
        numberPanel = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        cbVille = new javax.swing.JCheckBox();
        cbResto = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        cbLoisir = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        cbDépartemental = new javax.swing.JCheckBox();
        cbAutoroute = new javax.swing.JCheckBox();
        cbNational = new javax.swing.JCheckBox();
        nbNoeud = new javax.swing.JLabel();
        nbRoute = new javax.swing.JLabel();
        neighborListPanel = new javax.swing.JPanel();
        neighborListPanel1 = new javax.swing.JPanel();
        cbunDistance = new javax.swing.JCheckBox();
        cbDeuxDistance = new javax.swing.JCheckBox();
        neighborListPanel2 = new javax.swing.JPanel();
        vcbville = new javax.swing.JCheckBox();
        vCbResto = new javax.swing.JCheckBox();
        vCbLoisir = new javax.swing.JCheckBox();
        comparPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        is2Distancetxt = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        jScrollGraphpane = new javax.swing.JScrollPane();
        graphPanel1 = new saegraphmap.window.GraphPanel();
        pointDataPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem4 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem5 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();

        jScrollPane1.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(970, 859));
        setPreferredSize(new java.awt.Dimension(970, 859));

        globalOptionPanel.setLayout(new java.awt.GridLayout(3, 0, 0, 10));

        numberPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtres et nombre"));
        numberPanel.setEnabled(false);
        numberPanel.setMinimumSize(new java.awt.Dimension(0, 274));

        jLabel23.setText("Routes");

        cbVille.setSelected(true);
        cbVille.setText("Ville");
        cbVille.setEnabled(false);
        cbVille.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbVilleItemStateChanged(evt);
            }
        });

        cbResto.setSelected(true);
        cbResto.setText("Restaurant");
        cbResto.setEnabled(false);
        cbResto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbRestoItemStateChanged(evt);
            }
        });

        jLabel7.setText("Noeud");

        cbLoisir.setSelected(true);
        cbLoisir.setText("Loisir");
        cbLoisir.setEnabled(false);
        cbLoisir.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbLoisirItemStateChanged(evt);
            }
        });
        cbLoisir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLoisirActionPerformed(evt);
            }
        });

        cbDépartemental.setSelected(true);
        cbDépartemental.setText("Départemental");
        cbDépartemental.setEnabled(false);
        cbDépartemental.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbDépartementalItemStateChanged(evt);
            }
        });

        cbAutoroute.setSelected(true);
        cbAutoroute.setText("Autoroute");
        cbAutoroute.setEnabled(false);
        cbAutoroute.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbAutorouteItemStateChanged(evt);
            }
        });

        cbNational.setSelected(true);
        cbNational.setText("National");
        cbNational.setEnabled(false);
        cbNational.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbNationalItemStateChanged(evt);
            }
        });

        nbNoeud.setText("0");

        nbRoute.setText("0");

        javax.swing.GroupLayout numberPanelLayout = new javax.swing.GroupLayout(numberPanel);
        numberPanel.setLayout(numberPanelLayout);
        numberPanelLayout.setHorizontalGroup(
            numberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(numberPanelLayout.createSequentialGroup()
                .addGroup(numberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel23)
                    .addComponent(jLabel7)
                    .addGroup(numberPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(numberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(numberPanelLayout.createSequentialGroup()
                                .addGroup(numberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbAutoroute)
                                    .addComponent(cbNational)
                                    .addComponent(cbDépartemental)
                                    .addComponent(cbVille)
                                    .addComponent(cbResto))
                                .addGap(0, 230, Short.MAX_VALUE))
                            .addGroup(numberPanelLayout.createSequentialGroup()
                                .addComponent(cbLoisir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nbNoeud))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, numberPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(nbRoute)))
                .addContainerGap())
        );
        numberPanelLayout.setVerticalGroup(
            numberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(numberPanelLayout.createSequentialGroup()
                .addComponent(jLabel7)
                .addGap(3, 3, 3)
                .addComponent(cbVille)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbResto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(numberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbLoisir)
                    .addComponent(nbNoeud))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbAutoroute)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbDépartemental)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbNational)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(nbRoute)
                .addContainerGap())
        );

        globalOptionPanel.add(numberPanel);

        neighborListPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Voisins"));
        neighborListPanel.setEnabled(false);
        neighborListPanel.setMinimumSize(new java.awt.Dimension(177, 100));
        neighborListPanel.setPreferredSize(new java.awt.Dimension(177, 100));
        neighborListPanel.setLayout(new java.awt.BorderLayout());

        neighborListPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        cbunDistance.setText("1-distance");
        cbunDistance.setEnabled(false);
        cbunDistance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbunDistanceActionPerformed(evt);
            }
        });
        neighborListPanel1.add(cbunDistance);

        cbDeuxDistance.setText("2-distance");
        cbDeuxDistance.setEnabled(false);
        neighborListPanel1.add(cbDeuxDistance);

        neighborListPanel.add(neighborListPanel1, java.awt.BorderLayout.PAGE_START);

        neighborListPanel2.setLayout(new java.awt.GridLayout(3, 0));

        vcbville.setSelected(true);
        vcbville.setText("Voir que les villes");
        vcbville.setEnabled(false);
        vcbville.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbunDistanceActionPerformed(evt);
            }
        });
        neighborListPanel2.add(vcbville);

        vCbResto.setSelected(true);
        vCbResto.setText("Voir que les retaurants");
        vCbResto.setEnabled(false);
        vCbResto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbunDistanceActionPerformed(evt);
            }
        });
        neighborListPanel2.add(vCbResto);

        vCbLoisir.setSelected(true);
        vCbLoisir.setText("Voir que les loisirs");
        vCbLoisir.setEnabled(false);
        vCbLoisir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbunDistanceActionPerformed(evt);
            }
        });
        neighborListPanel2.add(vCbLoisir);

        neighborListPanel.add(neighborListPanel2, java.awt.BorderLayout.CENTER);

        globalOptionPanel.add(neighborListPanel);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Comparaisons"));
        jPanel2.setEnabled(false);

        jLabel5.setText("caractere de la comparaison :");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "(Aucun)", "Ouverture", "Gastronomie", "Culture" }));
        jComboBox1.setEnabled(false);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Aucun lieu séléctionné");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jComboBox1, 0, 355, Short.MAX_VALUE)
            .addComponent(jLabel5)
            .addComponent(jLabel6)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Legende"));

        jPanel3.setBackground(new java.awt.Color(92, 92, 92));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 57, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(73, 38, 24));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(230, 168, 0));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPanel6.setBackground(java.awt.Color.green);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        jPanel7.setBackground(java.awt.Color.red);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        jPanel8.setBackground(java.awt.Color.blue);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        jLabel8.setText("Villes");

        jLabel9.setText("Restaurants");

        jLabel10.setText("Loisirs");

        jLabel15.setText("Autoroutes");

        jLabel16.setText("Nationnales");

        jLabel17.setText("Departementales");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(68, 68, 68)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout comparPanelLayout = new javax.swing.GroupLayout(comparPanel);
        comparPanel.setLayout(comparPanelLayout);
        comparPanelLayout.setHorizontalGroup(
            comparPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(is2Distancetxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        comparPanelLayout.setVerticalGroup(
            comparPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(comparPanelLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(is2Distancetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        globalOptionPanel.add(comparPanel);

        getContentPane().add(globalOptionPanel, java.awt.BorderLayout.LINE_START);

        mainPanel.setBackground(java.awt.Color.white);
        mainPanel.setLayout(new java.awt.BorderLayout());

        jScrollGraphpane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollGraphpane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollGraphpane.setOpaque(false);
        jScrollGraphpane.setViewportView(graphPanel1);

        mainPanel.add(jScrollGraphpane, java.awt.BorderLayout.CENTER);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 0);
        flowLayout1.setAlignOnBaseline(true);
        pointDataPanel.setLayout(flowLayout1);

        jLabel1.setText("Lieu séléctionné 1 (click)");
        pointDataPanel.add(jLabel1);

        jLabel11.setText("type:");
        pointDataPanel.add(jLabel11);

        jLabel13.setText("type");
        pointDataPanel.add(jLabel13);

        jLabel12.setText("Nom lieu:");
        pointDataPanel.add(jLabel12);

        jLabel14.setText("nom");
        pointDataPanel.add(jLabel14);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator2.setMinimumSize(new java.awt.Dimension(2, 17));
        jSeparator2.setName(""); // NOI18N
        jSeparator2.setPreferredSize(new java.awt.Dimension(2, 17));
        pointDataPanel.add(jSeparator2);

        jLabel2.setText("Lieu séléctionné 2 (shift + click)");
        pointDataPanel.add(jLabel2);

        jLabel32.setText("type:");
        pointDataPanel.add(jLabel32);

        jLabel33.setText("type");
        pointDataPanel.add(jLabel33);

        jLabel34.setText("Nom lieu:");
        pointDataPanel.add(jLabel34);

        jLabel35.setText("nom");
        pointDataPanel.add(jLabel35);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setMinimumSize(new java.awt.Dimension(2, 17));
        jSeparator3.setName(""); // NOI18N
        jSeparator3.setPreferredSize(new java.awt.Dimension(2, 17));
        pointDataPanel.add(jSeparator3);

        jLabel3.setText("nombre de lieux:");
        pointDataPanel.add(jLabel3);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("0");
        pointDataPanel.add(jLabel4);

        getContentPane().add(pointDataPanel, java.awt.BorderLayout.PAGE_END);

        jMenu1.setText("Fichier");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Ouvrir un CSV");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator5);

        jMenuItem2.setText("Quitter...");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Outils");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("afficher les nombres");
        jCheckBoxMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem2);

        jCheckBoxMenuItem3.setSelected(true);
        jCheckBoxMenuItem3.setText("afficher les informations");
        jCheckBoxMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem3);

        jCheckBoxMenuItem4.setSelected(true);
        jCheckBoxMenuItem4.setText("afficher les voisins");
        jCheckBoxMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem4);

        jCheckBoxMenuItem5.setSelected(true);
        jCheckBoxMenuItem5.setText("afficher les comparaisons");
        jCheckBoxMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem5);

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("afficher la legende");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem1);
        jMenu2.add(jSeparator6);

        jMenuItem10.setText("afficher tous les menus");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem10);

        jMenuItem11.setText("afficher aucun menu");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem11);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        pointDataPanel.setVisible(true);
        neighborListPanel.setVisible(true);
        numberPanel.setVisible(true);
        jPanel2.setVisible(true);
        jPanel1.setVisible(true);
        globalOptionPanel.setVisible(true);
        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem3.setSelected(true);
        jCheckBoxMenuItem4.setSelected(true);
        jCheckBoxMenuItem5.setSelected(true);
        jCheckBoxMenuItem1.setSelected(true);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        pointDataPanel.setVisible(false);
        neighborListPanel.setVisible(false);
        numberPanel.setVisible(false);
        jPanel2.setVisible(false);
        jPanel1.setVisible(false);
        globalOptionPanel.setVisible(false);
        jCheckBoxMenuItem2.setSelected(false);
        jCheckBoxMenuItem3.setSelected(false);
        jCheckBoxMenuItem4.setSelected(false);
        jCheckBoxMenuItem5.setSelected(false);
        jCheckBoxMenuItem1.setSelected(false);
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jCheckBoxMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ActionPerformed
        if (jCheckBoxMenuItem2.isSelected()){
            globalOptionPanel.setVisible(true);
            numberPanel.setVisible(true);
        }
        else numberPanel.setVisible(false);  
    }//GEN-LAST:event_jCheckBoxMenuItem2ActionPerformed

    private void jCheckBoxMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem3ActionPerformed
        if (jCheckBoxMenuItem3.isSelected()){
            pointDataPanel.setVisible(true);
        }
        else pointDataPanel.setVisible(false);  
    }//GEN-LAST:event_jCheckBoxMenuItem3ActionPerformed

    private void jCheckBoxMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem4ActionPerformed
        if (jCheckBoxMenuItem4.isSelected()){
            neighborListPanel.setVisible(true);
        }
        else neighborListPanel.setVisible(false);  
    }//GEN-LAST:event_jCheckBoxMenuItem4ActionPerformed

    private void jCheckBoxMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem5ActionPerformed
        if (jCheckBoxMenuItem5.isSelected()){
            globalOptionPanel.setVisible(true);
            jPanel2.setVisible(true);
        }
        else jPanel2.setVisible(false);
    }//GEN-LAST:event_jCheckBoxMenuItem5ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * Cache ou Affiche les ville et modifie le compteur de nb de node affiche
     * @param evt
     */
    private void cbVilleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbVilleItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){
            fichier.changeLieuVisibility('V',true);
            System.out.println("1");
            nbNoeud.setText(Integer.toString(Integer.parseInt(nbNoeud.getText()) + fichier.compterVilles()));
        }
        else{
            fichier.changeLieuVisibility('V',false);
            System.out.println("2");
            nbNoeud.setText(Integer.toString(Integer.parseInt(nbNoeud.getText()) - fichier.compterVilles()));
        }
        graphPanel1.repaint();
    }//GEN-LAST:event_cbVilleItemStateChanged

    /**
     * Cache ou Affiche les resto et modifie le compteur de nb de node affiche
     * @param evt
     */
    private void cbRestoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbRestoItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){
            fichier.changeLieuVisibility('R',true);
            nbNoeud.setText(Integer.toString(Integer.parseInt(nbNoeud.getText()) + fichier.compterRestaurants()));
        }
        else{
            fichier.changeLieuVisibility('R',false);
            nbNoeud.setText(Integer.toString(Integer.parseInt(nbNoeud.getText()) - fichier.compterRestaurants()));
        }
        graphPanel1.repaint();
    }//GEN-LAST:event_cbRestoItemStateChanged

    /**
     * Cache ou Affiche les loirirs et modifie le compteur de nb de node affiche
     * @param evt
     */
    private void cbLoisirItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbLoisirItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){
            fichier.changeLieuVisibility('L',true);
            nbNoeud.setText(Integer.toString(Integer.parseInt(nbNoeud.getText()) + fichier.compterLoisir()));
        }
        else{
            fichier.changeLieuVisibility('L',false);
            nbNoeud.setText(Integer.toString(Integer.parseInt(nbNoeud.getText()) - fichier.compterLoisir()));
        }
        graphPanel1.repaint();
    }//GEN-LAST:event_cbLoisirItemStateChanged


    /**
     * Cache ou Affiche les Départementales et modifie le compteur de nb de route affiche
     * @param evt
     */
    private void cbDépartementalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbDépartementalItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){
            graphPanel1.setAfficheDepartemental(true);;
            nbRoute.setText(Integer.toString(Integer.parseInt(nbRoute.getText()) + fichier.compterDepartementales()));
        }
        else{
            graphPanel1.setAfficheDepartemental(false);
            nbRoute.setText(Integer.toString(Integer.parseInt(nbRoute.getText()) - fichier.compterDepartementales()));
        }
        graphPanel1.repaint();
    }//GEN-LAST:event_cbDépartementalItemStateChanged

    /**
     * Cache ou Affiche les auto-routes et modifie le compteur de nb de route affiche
     * @param evt
     */
    private void cbAutorouteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbAutorouteItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){
            graphPanel1.setAfficheAutoroute(true);
            nbRoute.setText(Integer.toString(Integer.parseInt(nbRoute.getText()) + fichier.compterAutoroute()));
        }
        else{
            graphPanel1.setAfficheAutoroute(false);
            nbRoute.setText(Integer.toString(Integer.parseInt(nbRoute.getText()) - fichier.compterAutoroute()));
        }
        graphPanel1.repaint();
    }//GEN-LAST:event_cbAutorouteItemStateChanged

    /**
     * Cache ou Affiche les nationales et modifie le compteur de nb de route affiche
     * @param evt
     */
    private void cbNationalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbNationalItemStateChanged
    if(evt.getStateChange() == ItemEvent.SELECTED){
            graphPanel1.setAfficheNationale(true);
            nbRoute.setText(Integer.toString(Integer.parseInt(nbRoute.getText()) + fichier.compterNationales()));
        }
        else{
            graphPanel1.setAfficheNationale(false);
            nbRoute.setText(Integer.toString(Integer.parseInt(nbRoute.getText()) - fichier.compterNationales()));
        }
        graphPanel1.repaint();
    }//GEN-LAST:event_cbNationalItemStateChanged

    private void cbLoisirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLoisirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbLoisirActionPerformed

    /**
     * applique le filtre 2-distance
     * @param evt
     */
    private void cbunDistanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbunDistanceActionPerformed
        filtreUnDeuxDistance();
    }//GEN-LAST:event_cbunDistanceActionPerformed


    /**
     * Cette fonction permet l'ouverture d'un csv
     * @param evt
     */
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        final JFileChooser fc = new JFileChooser();
        //initialisation de la fenêtre de choix des fichier
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setMultiSelectionEnabled(false);
        fc.setFileFilter(new FileNameExtensionFilter("CSV file", "csv","txt"));
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            //initalise l'interface , charge le csv dans la Tliste, génération du graphmap
            File file = fc.getSelectedFile();
            String path = new String();
            path = file.getAbsolutePath();
            fichier = new TListe(path);
            graphPanel1.ajoutListePts(fichier);
            jScrollGraphpane.setViewportView(graphPanel1);
            Integer nombre = fichier.compterVilles() + fichier.compterRestaurants() + fichier.compterLoisir();      
            jLabel4.setText(nombre.toString());
            nbRoute.setText(Integer.toString(fichier.compterRoute()));
            nbNoeud.setText(Integer.toString(fichier.compterLieu()));
            numberPanel.setEnabled(true);
            for (Component c : numberPanel.getComponents()) c.setEnabled(true);
            comparPanel.setEnabled(false);
            for (Component c : comparPanel.getComponents()) c.setEnabled(false);
            neighborListPanel.setEnabled(false);
            for (Component c : neighborListPanel1.getComponents()) c.setEnabled(false);
            for (Component c : neighborListPanel2.getComponents()) c.setEnabled(false);
            }

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * applique la compasion entre les villes
     * @param evt
     */
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        comparaison();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        if (jCheckBoxMenuItem1.isSelected()){
            globalOptionPanel.setVisible(true);
            jPanel1.setVisible(true);
        }
        else jPanel1.setVisible(false);
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mainscreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mainscreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mainscreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mainscreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mainscreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox cbAutoroute;
    private javax.swing.JCheckBox cbDeuxDistance;
    private javax.swing.JCheckBox cbDépartemental;
    private javax.swing.JCheckBox cbLoisir;
    private javax.swing.JCheckBox cbNational;
    private javax.swing.JCheckBox cbResto;
    private javax.swing.JCheckBox cbVille;
    private javax.swing.JCheckBox cbunDistance;
    private javax.swing.JPanel comparPanel;
    private javax.swing.JPanel globalOptionPanel;
    private saegraphmap.window.GraphPanel graphPanel1;
    private javax.swing.JLabel is2Distancetxt;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem4;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollGraphpane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel nbNoeud;
    private javax.swing.JLabel nbRoute;
    private javax.swing.JPanel neighborListPanel;
    private javax.swing.JPanel neighborListPanel1;
    private javax.swing.JPanel neighborListPanel2;
    private javax.swing.JPanel numberPanel;
    private javax.swing.JPanel pointDataPanel;
    private javax.swing.JCheckBox vCbLoisir;
    private javax.swing.JCheckBox vCbResto;
    private javax.swing.JCheckBox vcbville;
    // End of variables declaration//GEN-END:variables
    private FloydWarshallMatrix matrix;
    TListe fichier = null;
    TLieu selection1 = new TLieu();
    TLieu selection2 = new TLieu();


    /**
     * en fonction du type de comparons voulu, les 2 tlieu selectionné sont comparé
     * le résultat est affiché dans un label
     */
    private void comparaison(){
        if(jComboBox1.getSelectedItem()=="Ouverture") {
            jLabel6.setText(fichier.plusOuverte(selection1,selection2));
        }
        if(jComboBox1.getSelectedItem()=="Gastronomie") {
            jLabel6.setText(fichier.plusGastronomique(selection1,selection2));
        }
        if(jComboBox1.getSelectedItem()=="Culture") {
            jLabel6.setText(fichier.plusCulturelle(selection1,selection2));
        }
        if(jComboBox1.getSelectedItem()=="(Aucun)") {
            jLabel6.setText("aucun lieu séléctionné");
        }
    }

    /**
     * Cette fonction permet de filtrer les ville affiché si elle sont à 2 ou 1 distance du tlieu selectionné
     */
    private void filtreUnDeuxDistance(){
        if(cbunDistance.isSelected() || cbDeuxDistance.isSelected()) {
            ArrayList<TLieu> lieuAffiché = new ArrayList<>();
            lieuAffiché.add(selection1);
            //ajout des tlieu dans une liste en fonction de si on demande 1 ou 2 distance
            if (cbunDistance.isSelected()) {
                if (vcbville.isSelected()) {
                    lieuAffiché.addAll(fichier.unDistance(selection1, 'V'));
                }
                if (vCbResto.isSelected()) {
                    lieuAffiché.addAll(fichier.unDistance(selection1, 'R'));
                }
                if (vCbLoisir.isSelected()) {
                    lieuAffiché.addAll(fichier.unDistance(selection1, 'L'));
                }
            }
            if (cbDeuxDistance.isSelected()) {
                if (vcbville.isSelected()) {
                    lieuAffiché.addAll(fichier.deuxDistance(selection1, 'V'));
                }
                if (vCbResto.isSelected()) {
                    lieuAffiché.addAll(fichier.deuxDistance(selection1, 'R'));
                }
                if (vCbLoisir.isSelected()) {
                    lieuAffiché.addAll(fichier.deuxDistance(selection1, 'L'));
                }
            }
            //affiche les ville si elle sont dans la liste et cache les autres
            for (TLieu lieu = fichier.getListe(); lieu != null; lieu = lieu.getSuivant()) {
                if (lieuAffiché.contains(lieu)) {
                    lieu.getrJTogBtn().setVisible(true);
                } else {
                    lieu.getrJTogBtn().setVisible(false);
                }
            }
        }
        else {
            for (TLieu lieu = fichier.getListe(); lieu != null; lieu = lieu.getSuivant()) {
                lieu.getrJTogBtn().setVisible(true);
            }
        }
        graphPanel1.repaint();
    }

    /**
     * Class interne qui implément un ListenerCustom du graph panel
     */
    class GraphListener implements GraphPanelListener{

        @Override
        public void lieuSelectedChanged(ArrayList<TLieu> lieuEvent) {
            //si aucun pts n'est selectionné au rend accessible que le paneau qui concerne la map en général
            if (lieuEvent.get(0) == null && lieuEvent.get(1) == null){
                jComboBox1.setEnabled(false);
                jLabel13.setText("");
                jLabel14.setText("non selectionne");
                jLabel33.setText("");
                jLabel35.setText("non selectionne");
                numberPanel.setEnabled(true);
                for (Component c : numberPanel.getComponents()) c.setEnabled(true);
                comparPanel.setEnabled(false);
                for (Component c : comparPanel.getComponents()) c.setEnabled(false);
                neighborListPanel.setEnabled(false);
                for (Component c : neighborListPanel1.getComponents()) c.setEnabled(false);
                for (Component c : neighborListPanel2.getComponents()) c.setEnabled(false);
                cbAutoroute.setSelected(true);
                cbDépartemental.setSelected(true);
                cbNational.setSelected(true);
                cbLoisir.setSelected(true);
                cbResto.setSelected(true);
                cbVille.setSelected(true);
                fichier.changeLieuVisibility('A',true);
                graphPanel1.repaint();
                is2Distancetxt.setText("");
            }
            //si que le pts 2 est selectionné alros on fait la même chose si aucun n'était selectionné
            else if (lieuEvent.get(0) == null && lieuEvent.get(1) != null){
                selection2 = lieuEvent.get(1);
                jComboBox1.setEnabled(false);
                jLabel13.setText("");
                jLabel14.setText("non selectionne");
                jLabel33.setText(Character.toString(selection2.getType()));
                jLabel35.setText(selection2.getNomLieu());
                numberPanel.setEnabled(true);
                for (Component c : numberPanel.getComponents()) c.setEnabled(true);
                comparPanel.setEnabled(false);
                for (Component c : comparPanel.getComponents()) c.setEnabled(false);
                neighborListPanel.setEnabled(false);
                for (Component c : neighborListPanel1.getComponents()) c.setEnabled(false);
                for (Component c : neighborListPanel2.getComponents()) c.setEnabled(false);
                cbAutoroute.setSelected(true);
                cbDépartemental.setSelected(true);
                cbNational.setSelected(true);
                cbLoisir.setSelected(true);
                cbResto.setSelected(true);
                cbVille.setSelected(true);
                fichier.changeLieuVisibility('A',true);
                graphPanel1.repaint();
                is2Distancetxt.setText("");
            }

            //si le premier pts est selectionner on autorise les filtre à 1 et 2 distance
            else if (lieuEvent.get(0) != null && lieuEvent.get(1) == null){
                selection1 = lieuEvent.get(0);
                jComboBox1.setEnabled(false);
                jLabel13.setText(Character.toString(selection1.getType()));
                jLabel14.setText(selection1.getNomLieu());
                jLabel33.setText("");
                jLabel35.setText("non selectionne");
                numberPanel.setEnabled(false);
                for (Component c : numberPanel.getComponents()) c.setEnabled(false);
                comparPanel.setEnabled(false);
                for (Component c : comparPanel.getComponents()) c.setEnabled(false);
                neighborListPanel.setEnabled(true);
                for (Component c : neighborListPanel1.getComponents()) c.setEnabled(true);
                for (Component c : neighborListPanel2.getComponents()) c.setEnabled(true);
                if(!neighborListPanel.isEnabled()) fichier.changeLieuVisibility('A',true);
                is2Distancetxt.setText("");
                filtreUnDeuxDistance();
                graphPanel1.repaint();
            }
            //si il sont tous selectionné alors on autorise les comparaison
            else{
                selection1 = lieuEvent.get(0);
                selection2 = lieuEvent.get(1);
                jComboBox1.setEnabled(true);
                jLabel13.setText(Character.toString(selection1.getType()));
                jLabel14.setText(selection1.getNomLieu());
                jLabel33.setText(Character.toString(selection2.getType()));
                jLabel35.setText(selection2.getNomLieu());
                for(TLieu l = fichier.getListe(); l !=null ; l = l.getSuivant()){
                    for(TRoute r = l.getTetelisteroutes(); r !=null ; r = r.getSuivant()){
                        r.setRoutePluscourChemin(false);
                    }
                }
                numberPanel.setEnabled(false);
                for (Component c : numberPanel.getComponents()) c.setEnabled(false);
                comparPanel.setEnabled(true);
                for (Component c : comparPanel.getComponents()) c.setEnabled(true);
                neighborListPanel.setEnabled(true);
                for (Component c : neighborListPanel1.getComponents()) c.setEnabled(true);
                for (Component c : neighborListPanel2.getComponents()) c.setEnabled(true);
                comparaison();
                fichier.changeLieuVisibility('A',true);
                filtreUnDeuxDistance();
                graphPanel1.repaint();
                if (fichier.isDeuxDistance(selection1, selection2)) {
                    is2Distancetxt.setText("<html>Les 2 lieux sont à 2-distance <br>de l'un de l'autre</html>");
                } else {
                    is2Distancetxt.setText("<html>Les 2 lieux ne sont pas à 2-distance <br>de l'un de l'autre</html>");
                }
            }
        }
    }
}
